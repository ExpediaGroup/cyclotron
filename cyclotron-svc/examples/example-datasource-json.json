{
    "dataSources": [{
        "name": "changes",
        "postProcessor": "pp = function (data) {\n    var filtered = _.filter(data, function(row) {\n        return _.has(row, 'week_date');\n    });\n    \n    _.each(filtered, function(row) {\n        /* Add Failed Percentage (if data is OK!) */\n        if (_.has(row, 'failedchanges') \n            && _.has(row, 'changes') \n            && row.changes > row.failedchanges) {\n                \n            row.failedpercent = Math.round(10000 * row.failedchanges / row.changes) / 100;\n            \n        } else {\n            row.failedpercent = null;\n        }\n    });\n    \n    return _.reduce(filtered, function(result, row, index) {\n        if (index > 0 && _.has(row, 'changes')) { \n            var previousChanges = result[index-1].changes || 0;\n            row.changesdiff = row.changes - previousChanges;\n        }\n        result[index] = row;\n        return result;\n    }, []);\n}",
        "sortBy": ["week_date"],
        "type": "json",
        "url": "http://pastebin.com/raw.php?i=L8xGXwEi"
    }, {
        "name": "express-commits",
        "options": {
            "headers": {
                "User-Agent": "Cyclotron"
            }
        },
        "postProcessor": "pp = function (data) {\n\n    var new_data = _.map(data, function(row) {\n        if (_.isUndefined(row.commit)) {\n            return null;\n        }\n        \n        return {\n            sha: row.sha,\n            date: row.commit.author.date,\n            author: row.commit.author.name,\n            message: row.commit.message,\n            url: row.html_url,\n            avatar: row.author.avatar_url\n        };\n    });\n\n    return _.compact(new_data);\n}",
        "type": "json",
        "url": "https://api.github.com/repos/strongloop/express/commits"
    }, {
        "name": "weather",
        "options": {
            "followAllRedirects": "${true}",
            "strictSSL": "${false}"
        },
        "postProcessor": "pp = function (result) {\n    return [{\n        name: result.name,\n        temp: result.main.temp,\n        humidity: result.main.humidity,\n        description: result.weather[0].main,\n        weather_code: result.weather[0].id\n    }];\n}",
        "queryParameters": {
            "q": "Bellevue,US",
            "appid": "8dc809734907311a1ce409b3645c3128"
        },
        "type": "json",
        "url": "http://api.openweathermap.org/data/2.5/weather"
    }],
    "description": "Examples with the JSON data source",
    "disableAnalytics": true,
    "name": "example-datasource-json",
    "pages": [{
        "layout": {
            "gridColumns": 2,
            "gridRows": 3
        },
        "name": "JSON Data Sources",
        "widgets": [{
            "dataSource": "changes",
            "highchart": {
                "chart": {
                    "type": "spline",
                    "zoomType": "xy"
                },
                "plotOptions": {
                    "series": {
                        "connectNulls": true
                    }
                },
                "series": [{
                    "x": "week_date",
                    "y": "changes",
                    "yAxis": 0
                }, {
                    "name": "Failed Changes",
                    "x": "week_date",
                    "y": "failedpercent",
                    "yAxis": 1
                }],
                "xAxis": {
                    "type": "datetime"
                },
                "yAxis": [{
                    "min": 0,
                    "title": {
                        "text": "Changes"
                    }
                }, {
                    "min": 0,
                    "opposite": true,
                    "title": {
                        "text": "Failed %"
                    }
                }]
            },
            "title": "Changes Per Week",
            "widget": "chart"
        }, {
            "columns": [{
                "label": "Week",
                "name": "week_date",
                "text": "${moment(#{week_date}).format('YYYY-MM-DD')}"
            }, {
                "name": "changes"
            }, {
                "label": "Changes Trend",
                "name": "changesdiff",
                "numeralformat": "+0"
            }, {
                "label": "Failed Changes",
                "name": "failedchanges"
            }],
            "dataSource": "changes",
            "rules": [{
                "columns": ["changesdiff"],
                "icon": "fa-arrow-up",
                "iconColor": "green",
                "rule": "parseInt('#{changesdiff}') > 0"
            }, {
                "columns": ["changesdiff"],
                "icon": "fa-arrow-down",
                "iconColor": "red",
                "rule": "parseInt('#{changesdiff}') < 0"
            }, {
                "columns": ["changesdiff"],
                "icon": "fa-arrow-right",
                "rule": "parseInt('#{changesdiff}') == 0"
            }],
            "widget": "table"
        }, {
            "columns": [{
                "label": "SHA",
                "link": "#{url}",
                "name": "sha",
                "openLinksInNewWindow": true,
                "text": "${'#{sha}'.substring(0,7)}"
            }, {
                "name": "message"
            }, {
                "name": "date"
            }, {
                "image": "#{avatar}",
                "imageHeight": "50px",
                "name": "author"
            }],
            "dataSource": "express-commits",
            "gridHeight": 1,
            "gridWidth": 2,
            "title": "GitHub: Recent Commits for Express",
            "widget": "table"
        }, {
            "dataSource": "weather",
            "gridHeight": 1,
            "gridWidth": 2,
            "numbers": [{
                "icon": "${Cyclotron.getWeatherIcon('#{description}', #{weather_code})}",
                "iconColor": "gray",
                "iconTooltip": "#{description}",
                "number": "${((_.parseInt(#{temp}) - 273.15) * 1.80 + 32.0).toFixed(1)} Â°F"
            }],
            "orientation": "horizontal",
            "title": "Weather in Bellevue",
            "widget": "number"
        }]
    }],
    "scripts": [{
        "singleLoad": true,
        "text": "Cyclotron.getWeatherIcon = function (description, weather_code) {\n    switch (description) {\n        case 'Clouds': \n            if (weather_code == 800)\n                return 'fa-sun-o';\n            return 'fa-cloud';\n        case 'Rain':\n            return 'fa-umbrella';\n        case 'Thunderstorm':\n            return 'fa-bolt';\n        default:\n            return '';\n    }\n};"
    }],
    "theme": "light"
}
