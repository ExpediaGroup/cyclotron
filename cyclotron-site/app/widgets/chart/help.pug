h3 Chart Widget
p
    | The Chart Widget wraps the excellent 
    a(href='http://www.highcharts.com/', target="_blank") Highcharts
    |  library, which provides numerous chart types and display options 
    | out-of-the-box.  For the most part, all features available in Highcharts
    | can be used in this widget.
    
p.
    This widget requires a Data Source, indicating where the data will come from.

h4 Properties
p.
    These are the properties specific to this widget.  
    General Cyclotron widget properties are not repeated here (e.g. layout properties).

property-table(properties='config.widgets.chart.properties')


h4 Series

p The 
    em series 
    | property is slightly different from the Highcharts definition, in order to pull data from
    | the data source.  Instead of specifying 
    em series.data
    | , that property is dynamically generated by the widget using the data source, using the
    | properties listed below.  Any other Highcharts series properties, such as 
    em type
    | , 
    em xAxis
    | , etc., can be included as well, and they will be applied.

table
    tr 
        th Property
        th Description
    tr
        td name
        td Optionally specifies the name of the series.  If it is not provided, the value of the 
            em y 
            | property will be used instead.  If this is specified as an inline JavaScript function,
            | the function will be called with the value of the 
            em y 
            | property and the return value used as the series name.
    tr
        td xFormat
        td Optionally specifies format string used to convert the data for the X-axis.  Supported formats are: "epoch", which is the number of seconds since the UTC epoch; "epochmillis", which is the number of milliseconds since the UTC epoch; and "string", which is a 
            a(href="http://momentjs.com/") Moment.js
            |-compatible datetime string.
    tr
        td x
        td Optional; if provided, specifies the column name for extracting data from the data 
            | source for the X-axis.  Highcharts supports charts without an X-axis, or with
            | categories specified in the X-axis, or with automatically generated X-axis values, 
            | so this property is not required.
    tr
        td y
        td Required, specifies the column name for extracting data from the data source for the Y-axis.
    tr
        td yIgnore
        td Optional, useful when using wildcard/regex for the y series, described below.
    tr
        td z
        td Optional; Some Highcharts chart types, such as a range or bubble, accept a 3rd value for each data
            | point.  If the chart type does not support it, the value will be ignored.  This property
            | should only be included if both 
            em x 
            | and 
            em y 
            | are also set.

p
    | It is possible to dynamically generate series for the chart by putting an 
    | asterisk or a regex in the 
    em y 
    | property.  If it matches either "*" or "/.../", that series will be expanded dynamically 
    | using the data source result.

p
    | If 
    em series.y 
    | is "*", all unused columns in the data source will be applied to that series.  That is,
    | the wildcard series will be cloned, with each unused column name replacing the 
    em y 
    | property.  Unused columns means any columns which were not used in the current or any 
    | previous series, for the 
    em x, y, 
    | or 
    em z 
    | properties.  For example, if a data source returned "_time" as one column, and an 
    | unknown number of additional columns, this series would be expanded for each additional 
    | column, all with the same time.

pre.code.
    "series": [{
        "x": "_time",
        "y": "*"
    }]

p
    | If 
    em name 
    | is set for the wildcard series, the given name will be combined with the column name for each
    | of the series (the 
    em y 
    | property), enabling differention.  However, if the 
    em name 
    | property is an inline JavaScript function for a wildcard series, the return value of
    | the function will be used as the series name, without modification.

p The
    em yIgnore 
    | property can be set to an array of strings that indicates columns that should be ignored.

p.
    Wildcard/regex series are evaluated in-order, so it is possible to have multiple series with a wildcard or 
    regex.  For example:
pre.code.
    "series": [{
            "type": "column",
            "x": "_time",
            "y": "total"
        },{
            "name": "${function(y) { return y.replace('avg_', ''); }}",
            "type": "line",
            "x": "_time",
            "y": "/avg_.*/"
        },{
            "name": "Total",
            "type": "line",
            "x": "_time",
            "y": "*",
            "yIgnore": ["id"]
        }
    ]

h3 Examples

h4 Basic Line Chart
p This example is available on the 
    a(href='/example-chart-line') example-chart-line
    |  dashboard.
pre.code.
    {
        "dataSource": "mock",
        "highchart": {
            "series": [{
                "x": "__index",
                "y": "number"
            }]
        },
        "title": "Basic Line Chart",
        "widget": "chart"
    }

h4 Time-Based Line Chart

p This uses the mock Data Source and displays a simple line chart, with time as the x-axis.

p This example is available on the 
    a(href='/example-chart-line') example-chart-line
    |  dashboard.
pre.code.
    {
        "dataSource": "timeseries",
        "highchart": {
            "series": [{
                "x": "_time",
                "xFormat": "epoch",
                "y": "grossbookingvalue"
            }],
            "xAxis": {
                "title": {
                    "text": "Time"
                },
                "type": "datetime"
            }
        },
        "title": "Time Series Line Chart",
        "widget": "chart"
    }

h4 Category Column Chart

p This example displays a column chart with categories on the x-axis.

p This example is available on the 
    a(href='/example-chart-columnbar') example-chart-columnbar
    |  dashboard.
pre.code.
    {
        "dataSource": "worldpop",
        "highchart": {
            "series": [{
                "name": "Year 1800",
                "type": "column",
                "x": "continent",
                "y": "1800"
            }, {
                "name": "Year 1900",
                "type": "column",
                "x": "continent",
                "y": "1900"
            }, {
                "name": "Year 2008",
                "type": "column",
                "x": "continent",
                "y": "2008"
            }],
            "xAxis": {
                "type": "category"
            },
            "yAxis": {
                "title": {
                    "text": "Population (millions)"
                }
            }
        },
        "title": "Column Chart",
        "widget": "chart"
    }

h4 Stacked Percentage Column Chart

p This example displays multiple series in a stack, with 
    | each series as a percentage of the total per category

p This example is available on the 
    a(href='/example-chart-columnbar') example-chart-columnbar
    |  dashboard.
pre.code.
    {
        "dataSource": "worldpop2",
        "highchart": {
            "plotOptions": {
                "column": {
                    "stacking": "percent"
                }
            },
            "series": [{
                "type": "column",
                "x": "year",
                "y": "*"
            }],
            "xAxis": {
                "type": "linear"
            },
            "yAxis": {
                "stackLabels": {
                    "enabled": true,
                    "style": {
                        "fontWeight": "bold"
                    }
                },
                "title": {
                    "text": "Population (millions)"
                }
            }
        },
        "title": "Stacked Percentage Column Chart",
        "widget": "chart"
    }

h4 Multiple Series, Dual-Axis
p.
    This chart has two line series, each with a separate y-axis.
    
p This example is available on the 
    a(href='/example-chart-columnbar') example-chart-columnbar
    |  dashboard.
pre.code.
    {
        "dataSource": "timeseries2",
        "highchart": {
            "series": [{
                "x": "date",
                "xFormat": "string",
                "y": "bookings"
            }, {
                "x": "date",
                "xFormat": "string",
                "y": "dollars",
                "yAxis": 1
            }],
            "xAxis": {
                "title": {
                    "text": "Time"
                },
                "type": "datetime"
            },
            "yAxis": [{
                "title": {
                    "text": "Bookings"
                }
            }, {
                "opposite": true,
                "title": {
                    "text": "Dollars"
                }
            }]
        },
        "title": "Date Strings Dual-Axis Line Chart",
        "widget": "chart"
    }

h4 Wildcard Series

p Instead of hardcoding a series for each column in the data source, series will be automatically
    | expanded automatically.  The columns "Year", "Population", and "Total" will not
    | become series, since they are either being used (as the x-axis) or listed in 
    em yIgnore
    | .

p This example is available on page 2 of the 
    a(href='/example-chart-line') example-chart-line
    |  dashboard.

pre.code.
    {
        "dataSource": "uscrime",
        "highchart": {
            "series": [{
                "type": "line",
                "x": "Year",
                "y": "*",
                "yIgnore": ["Population", "Total"]
            }],
            "subtitle": {
                "text": "Source: <a href=\"http://www.disastercenter.com/crime/uscrime.htm\">http://www.disastercenter.com</a>",
                "verticalAlign": "bottom"
            },
            "xAxis": {
                "type": "linear"
            },
            "yAxis": [{
                "min": 0,
                "title": {
                    "text": "Crimes Committed"
                }
            }]
        },
        "title": "Wildcard Series with yIgnore",
        "widget": "chart"
    }

h4 Regex Series

p Similar to the Wildcard Series example above, this Widget will automatically
    | create series based on the available columns in the data source.  Instead
    | of using all columns, it only accepts ones that match the regex.

p Additionally, this chart has a inline JS function to set the series name 
    |  (it converts the column name to uppercase).

p This example is available on page 2 of the 
    a(href='/example-chart-line') example-chart-line
    |  dashboard.

pre.code.
    {
        "dataSource": "uscrime",
        "highchart": {
            "series": [{
                "name": "${function(name) { return name.toUpperCase(); }}",
                "type": "line",
                "x": "Year",
                "y": "/.*Theft|.*Assault/",
                "yIgnore": ["Population", "Total"]
            }],
            "subtitle": {
                "text": "Source: <a href=\"http://www.disastercenter.com/crime/uscrime.htm\">http://www.disastercenter.com</a>",
                "verticalAlign": "bottom"
            },
            "xAxis": {
                "type": "linear"
            },
            "yAxis": [{
                "min": 0,
                "title": {
                    "text": "Crimes Committed"
                }
            }]
        },
        "title": "Regex Series with Name Function",
        "widget": "chart"
    }

h4 Pie Chart
p This example displays a pie chart from percentage data.

p This example is available on the 
    a(href='/example-chart-pie') example-chart-pie
    |  dashboard.
pre.code.
    {
        "dataSource": "mock_pie",
        "highchart": {
            "series": [{
                "name": "Browser share",
                "type": "pie",
                "x": "browser",
                "y": "percent"
            }],
            "tooltip": {
                "pointFormat": "{series.name}: {point.percentage:.1f}%"
            }
        },
        "title": "Pie Chart",
        "widget": "chart"
    }

h4 Semi-Circle Pie Chart
p This example is a modified version of the pie chart, using the start/endAngle properties to display only half a circle.
p This example is available on the 
    a(href='/example-chart-pie') example-chart-pie
    |  dashboard.
pre.code.
    {
        "series": [{
            "center": ["50%", "95%"],
            "endAngle": "90",
            "innerSize": "50%",
            "name": "Browser share",
            "startAngle": "-90",
            "type": "pie",
            "x": "browser",
            "y": "percent"
        }],
        "tooltip": {
            "pointFormat": "{series.name}: {point.percentage:.1f}%"
        }
    }

h4 Y-Axis Plot Lines
p This example displays two constant plot lines on a chart, indicating Warning and Critical thresholds.
p This example is available on page 3 of the 
    a(href='/example-chart-line?page=3') example-chart-line
    |  dashboard.
pre.code.
    {
        "series": [{
            "type": "spline",
            "x": "_time",
            "xFormat": "epoch",
            "y": "grossbookingvalue"
        }],
        "xAxis": {
            "title": {
                "text": "Time"
            },
            "type": "datetime"
        },
        "yAxis": {
            "plotLines": [{
                "color": "yellow",
                "dashStyle": "shortdash",
                "label": {
                    "text": "Warning"
                },
                "value": 2000,
                "width": 2
            }, {
                "color": "red",
                "dashStyle": "shortdash",
                "label": {
                    "text": "Critical Level"
                },
                "value": 3500,
                "width": 2
            }]
        }
    }

h4 Drilldown
p This example allows each series to be "drilled into", effectively replacing the chart with another chart of related data based on the selection.
p This example is available on the 
    a(href='/example-chart-drilldown') example-chart-drilldown
    |  dashboard.

p There's an optional second Data Source property on the Chart Widget: "drilldownDataSource":
pre.code.
    "dataSource": "example",
    "drilldownDataSource": "example-drilldown"

p This second Data Source is used to provide drilldown data for the primary Data Source.  The "drilldown" section below
    | contains one or more series of data from the Drilldown Data Source.  Each point on the main series has a "drilldown" key,
    | which is used to match the "key" property on of the drilldown series.  

p In this example, both Data Sources have a "type" column, so when a point is selected, 
    | the chart drills down into matching data from the Drilldown Data Source.

p Please note, the main series must use the "point" notation rather than "x"/"y".
pre.code.
    {
        "chart": {
            "type": "column"
        },
        "drilldown": {
            "series": [{
                "key": "#{type}",
                "x": "name",
                "y": "count"
            }]
        },
        "legend": {
            "enabled": false
        },
        "plotOptions": {
            "series": {
                "borderWidth": 0,
                "dataLabels": {
                    "enabled": "${true}"
                }
            }
        },
        "series": [{
            "name": "Things",
            "point": {
                "drilldown": "#{type}",
                "name": "#{name}",
                "y": "#{count}"
            }
        }],
        "xAxis": {
            "type": "category"
        }
    }
