.form-group(id='editor-property-{{ value.name }}', ng-repeat='value in visibleProperties')
    label(title='{{ value.description }}') 
        span {{ value.label }}
        i.inline-js-icon.fa.fa-code(ng-if='value.inlineJs', title='This value supports inline Javascript')
        i.inline-js-icon.fa.fa-code(ng-if='value.inlineJsKey', title='This hash supports inline Javascript in keys')
        i.inline-js-icon.fa.fa-code(ng-if='value.inlineJsValue', title='This hash supports inline Javascript in values')
        i.inline-encrypt-icon.fa.fa-lock(ng-if='value.inlineEncryption', title='This value supports inline encrypted strings')
        i.inline-delete-icon.fa.fa-times(ng-click='clearProperty(model, value.name)', ng-hide='value.type == "propertyset"', title='Clear the Value for this Property')

        btn.btn-link.small.encrypter.hidden(ng-if='value.inlineEncryption', data-name='{{ value.name }}') Encrypt Selection
    span(ng-if='!value.options', ng-switch='value.type', title='{{ value.description }}')
     
        //select.form-control(ng-model='model[value.name]', ng-switch-when='boolean', ng-options='bool for bool in booleanOptions')
        .radio-group(ng-switch-when='boolean')
            label True
                input(type='radio', ng-model='model[value.name]', ng-value='true') 
            label False
                input(type='radio', ng-model='model[value.name]', ng-value='false')
        
        textarea.form-control(ng-model='model[value.name]', ng-switch-when='textarea', 
            ng-required='{{ value.required }}', placeholder='{{ value.placeholder }}')

        jsonedit.form-control(model='model[value.name]', ng-switch-when='json')   

        div(ui-ace='aceOptions("{{ value.editorMode }}")', ng-model='model[value.name]', data-name='{{ value.name }}', ng-switch-when='editor')

        editor-view-hash(model='model[value.name]', label='{{ value.label }}', ng-switch-when='hash')

        editor-view-string-array(model='model[value.name]', label='{{ value.label }}', definition='value', ng-switch-when='string[]')

        .well.well-sm(ng-switch-when='propertyset')
            div.recursive
                .editor-property-set(dashboard='dashboard', model='model[value.name]', definition='value.properties')

        .well.well-sm(ng-switch-when='propertyset[]')
            div.recursive
                editor-view-inline-array(model='model[value.name]', definition='value')
                    .editor-property-set(model='item', definition='definition.properties')

        .well.well-sm(ng-switch-when='hash[]')
            div.recursive
                editor-view-inline-array(model='model[value.name]', definition='value')
                    editor-view-hash(model='item', label='key/value')

        input.form-control(ng-model='model[value.name]', 
            ng-required='{{ value.required }}', placeholder='{{ value.placeholder }}',
            type='number', ng-switch-when='integer')
        
        input.form-control(ng-model='model[value.name]', 
            ng-required='{{ value.required }}', placeholder='{{ value.placeholder }}',
            type='number', ng-switch-when='number')

        input.form-control(ng-model='model[value.name]', 
            ng-required='{{ value.required }}', placeholder='{{ value.placeholder }}',
            type='{{ value.inputType || "text" }}', ng-switch-default)

    span(ng-if='value.options', ng-switch='value.type')
        editor-view-string-array(model='model[value.name]', label='{{ value.label }}', definition='value', ng-switch-when='string[]')
            
        select.form-control(ng-model='model[value.name]', ng-switch-default, title='{{ value.description }}',
            ng-options='optionValue.value as (optionValue.label || optionKey) for (optionKey, optionValue) in getOptions(value.name, value.options)')
            option(value='')

div(ng-hide='hiddenProperties.length == 0')
    label Additional Properties
    select#editor-additionalProperties.form-control(title='Additional properties',
        ng-options='property as property.label for property in hiddenProperties',
        ng-change='addHiddenProperty(selectedHiddenProperty)',
        ng-model='selectedHiddenProperty')
            option(value='') Select Property
