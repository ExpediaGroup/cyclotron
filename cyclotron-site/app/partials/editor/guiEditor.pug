.editor-gui.container-fluid
    include ../header

    .row.header
        .dashboard-well
            .button-bar(ng-if='editor.initialized')
                button.btn(ng-class='{"btn-default": !canSave(), "btn-success": canSave()}', ng-click='save()')
                    i.fa.fa-check-square-o(ng-hide='isSaving')
                    span(ng-show='isSaving')
                        i.fa.fa-cog.fa-spin
                    |  Save

                .btn-group(uib-dropdown, ng-if='canPreview()')
                    a.btn.btn-primary(ng-href='{{ dashboardUrl(true) }}', target='cyclotron-preview', title='View Dashboard with Live mode enabled')
                        i.fa.fa-external-link
                        |  {{ previewButtonText() }}
                        
                    button.btn.btn-primary(type='button', uib-dropdown-toggle)
                        i.fa.fa-caret-down
                    ul.pull-right(role='menu', uib-dropdown-menu)
                        li(role='menuitem')
                            a(ng-href='{{ dashboardUrl(false) }}', target='cyclotron-preview', title='View Dashboard without Live mode')
                                i.fa.fa-external-link
                                |  View Dashboard

            h1(ng-show='editor.dashboard.name') {{ editor.dashboard.name }}
            h1(ng-hide='$stateParams.dashboardName || editor.dashboard.name') New Dashboard

            h2.text-muted.revision-control(ng-hide='editor.isNew', title='Click to view revision history', ng-click='editor.showRevisions = true')
                i.fa.fa-angle-double-left(ng-show='editor.showRevisions', ng-click='moveRevisionLeft()', title='View Previous Revision')
                i.fa.fa-clock-o
                span   revision {{ editor.dashboardWrapper.rev }}
                span(requires-auth)  by {{ editor.dashboardWrapper.lastUpdatedBy.name || '?' }}
                span(ng-show='editor.showRevisions')  - {{ editor.revisionDate}}
                i.fa.fa-angle-double-right(ng-show='editor.showRevisions && editor.latestRevision > editor.revision', ng-click='moveRevisionRight()', title='View Next Revision')

            h2.text-muted.analytics-control(ng-hide='editor.isNew || !isLatestRevision()', ui-sref='dashboardAnalytics({ dashboardName: editor.dashboard.name })',
                title='{{ editor.dashboardWrapper.visits }} total visits, {{ editor.dashboardWrapper.pageViews }} total page views')
                i(class='fa {{ getVisitCategory().icon }}')
                span  {{ getVisitCategory().text }} 
                    ng-pluralize(count='getVisitCategory().number', when='{"one": "visit", "other": "visits"}')

            h2.text-muted.stars-control(requires-auth, 
                ng-hide='editor.isNew || !isLatestRevision() || !editor.likeCount', 
                title='{{ editor.likeCount }} stars')
                i.fa.fa-star
                span  {{ editor.likeCount }} 
                    ng-pluralize(count='editor.likeCount', when='{1: "star", "other": "stars"}')

            h4.small.text-muted(ng-if='editor.dashboard.description')
                i.fa.fa-quote-left
                | {{ editor.dashboard.description }}
                i.fa.fa-quote-right

            h4.small.text-danger(ng-if='editor.dashboardWrapper.deleted')
                i.fa.fa-exclamation-triangle
                |  This Dashboard has been deleted.  Saving a new revision will undelete it.

            h4.small.text-warning(ng-if='!isLoggedIn()')
                i.fa.fa-exclamation-triangle
                |  Dashboards cannot be created or edited without being logged in.

            h4.small.text-warning(ng-if='isLoggedIn() && !editor.hasEditPermission')
                i.fa.fa-exclamation-triangle
                |  You don't have permission to edit this Dashboard.

            h4.small.text-warning(ng-if='hasDuplicateDataSourceName()')
                i.fa.fa-exclamation-triangle
                |  One or more Data Source names has been repeated.  All Data Source names must be unique to the Dashboard.

    .row
        .sidebar.col-sm-4
            ul.nav.nav-pills.nav-stacked
                li(ng-class='{active: editor.currentEditor=="edit.details"}')
                    a#editor-details(ng-click='goToSubState("edit.details", editor.dashboard)')
                        i.fa.fa-home
                        |  Details

                li(ng-class='{active: editor.currentEditor=="edit.dataSources"}')
                    a#editor-dataSources(ng-click='goToSubState("edit.dataSources", editor.dashboard.dataSources)') 
                        i.fa.fa-cloud-download
                        |  Data Sources
                        span.text-muted(ng-show='editor.dashboard.dataSources.length > 0')  ({{ editor.dashboard.dataSources.length }})

                li.indent(ng-show='editor.currentEditor == "edit.dataSources" || editor.currentEditor == "edit.dataSource"',
                    ng-repeat='dataSource in editor.dashboard.dataSources',
                    ng-class='{active: editor.selectedItem == dataSource && editor.currentEditor=="edit.dataSource"}')
                    a(ng-click='goToSubState("edit.dataSource", dataSource, $index)', id='editor-dataSource-{{ dataSource.name }}')
                        i.fa.fa-angle-right
                        |  {{ getDataSourceName(dataSource) }}
                        i.fa.fa-exclamation-triangle.right-hand-icon(ng-if='isDuplicateDataSourceName(dataSource)', title='This Data Source has a conflicting Name property.')

                li(ng-class='{active: editor.currentEditor=="edit.pages"}')
                    a#editor-pages(ng-click='goToSubState("edit.pages", editor.dashboard.pages)')
                        i.fa.fa-file-o
                        |  Pages
                        span.text-muted(ng-show='editor.dashboard.pages.length > 0')  ({{ editor.dashboard.pages.length }})

                li.indent(ng-show='editor.currentEditor=="edit.pages" || editor.currentEditor=="edit.page" || editor.currentEditor=="edit.widget"',
                    ng-repeat='page in editor.dashboard.pages',
                    ng-class='{active: editor.selectedPageIndex == $index && $state.name=="edit.page"}')
                    a(ng-click='goToSubState("edit.page", page, $index)', id='editor-page-{{ $index }}')
                        i.fa.fa-angle-right
                        |  {{ getPageName(page, $index) }}

                    ul.nav.nav-pills.nav-stacked(ng-show='(editor.currentEditor=="edit.page" && editor.selectedItem == page) || (editor.currentEditor=="edit.widget" && editor.selectedPageIndex == $index)')
                        li.indent(ng-repeat='widget in page.widgets',
                            ng-class='{active: $state.name=="edit.widget" && editor.selectedItemIndex == $index}')
                            a(ng-click='goToSubState("edit.widget", widget, $index)', id='editor-widget-{{ $index }}')
                                i.fa.fa-angle-right
                                |  {{ getWidgetName(widget, $index) }}

                li(ng-class='{active: editor.currentEditor=="edit.parameters"}')
                    a#editor-parameters(ng-click='goToSubState("edit.parameters", editor.dashboard.parameters)')
                        i.fa.fa-wrench
                        |  Parameters
                        span.text-muted(ng-show='editor.dashboard.parameters.length > 0')  ({{ editor.dashboard.parameters.length }})

                li.indent(ng-show='editor.currentEditor == "edit.parameters" || editor.currentEditor == "edit.parameter"',
                    ng-repeat='parameter in editor.dashboard.parameters',
                    ng-class='{active: editor.selectedItem == parameter && editor.currentEditor=="edit.parameter"}')
                    a(ng-click='goToSubState("edit.parameter", parameter, $index)', id='editor-parameter-{{ $index }}')
                        i.fa.fa-angle-right
                        |  {{ getParameterName(parameter, $index) }}

                li(ng-class='{active: editor.currentEditor=="edit.scripts"}')
                    a#editor-scripts(ng-click='goToSubState("edit.scripts", editor.dashboard.scripts)')
                        i.fa.fa-gears
                        |  Scripts
                        span.text-muted(ng-show='editor.dashboard.scripts.length > 0')  ({{ editor.dashboard.scripts.length }})

                li.indent(ng-show='editor.currentEditor == "edit.scripts" || editor.currentEditor == "edit.script"',
                    ng-repeat='script in editor.dashboard.scripts',
                    ng-class='{active: editor.selectedItem == script && editor.currentEditor=="edit.script"}')
                    a(ng-click='goToSubState("edit.script", script, $index)', id='editor-script-{{ $index }}')
                        i.fa.fa-angle-right
                        |  {{ getScriptOrStyleName(script, $index, 'Script') }}

                li(ng-class='{active: editor.currentEditor=="edit.styles"}')
                    a#editor-styles(ng-click='goToSubState("edit.styles", editor.dashboard.styles)')
                        i.fa.fa-font
                        |  Styles
                        span.text-muted(ng-show='editor.dashboard.styles.length > 0')  ({{ editor.dashboard.styles.length }})

                li.indent(ng-show='editor.currentEditor == "edit.styles" || editor.currentEditor == "edit.style"',
                    ng-repeat='style in editor.dashboard.styles',
                    ng-class='{active: editor.selectedItem == style && editor.currentEditor=="edit.style"}')
                    a(ng-click='goToSubState("edit.style", style, $index)', id='editor-style-{{ $index }}')
                        i.fa.fa-angle-right
                        |  {{ getScriptOrStyleName(style, $index, 'Style') }}

                li.divider(ng-show='canEncrypt() || canClone() || canPush() || canDelete() || canExport()')

                li(ng-show='canClone()')
                    a#editor-clone(ng-click='clone()', title='Clone this Dashboard')
                        i.fa.fa-code-fork
                        |  Clone Dashboard

                li(ng-show='canPush()')
                    a#editor-push(ng-click='push()')
                        i.fa.fa-send-o
                        |  Push to Environment

                li(ng-show='canDelete()')
                    a#editor-delete(ng-click='delete()', title='Delete this Dashboard')
                        i.fa.fa-trash-o
                        |  Delete

                li(ng-show='canExport()')
                    a#editor-export(ui-sref='export({ dashboardName: editor.dashboard.name })', title='Export this Dashboard')
                        i.fa.fa-download
                        |  Export

                li(ng-show='canEncrypt()')
                    a#editor-export(ng-click='encrypt()', title='Generate Encrypted String')
                        i.fa.fa-lock
                        |  Encrypt ...

                li.divider
                li
                    a#editor-history(ui-sref='dashboardHistory({ dashboardName: editor.dashboard.name })', title='View Dashboard History')
                        i.fa.fa-clock-o
                        |  History
                
                li
                    a#editor-analytics(ui-sref='dashboardAnalytics({ dashboardName: editor.dashboard.name })', title='View Dashboard Analytics')
                        i.fa.fa-bar-chart
                        |  Analytics
                li
                    a#editor-help(ng-href='/help', target='help', title='Documentation for Cyclotron')
                        i.fa.fa-question-circle
                        |  Documentation

        .col-sm-8
            div.pull-right(ng-show='canJsonEdit()')
                a(ng-hide='$state.name=="edit.json"', ui-sref='edit.json')
                    button.btn.btn-default
                        i.fa.fa-edit
                        |  Edit JSON

            ui-view.editor-contents

    .row.footer
